<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAGACoHAAAFgAAACgAAAAwAAAAYAAAAAEAGAAAAAAAgBwAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACdkoSciXGdh2ufiWygi3AAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACUgGiVckKZaCicZR+ZYh6WXx2VXh2V
        Xh2WXh2ZYh6ZYh6cZR+dZh+cbjGdfFCmj3EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACQhHaXcUCb
        ZB6VXh2PWBqJURl3SBl2SBmFURmLUxmMVBmMVBmMVRqMVRqMVRqMVRqPWBuSWxuWXhyaYx6dayuph1wA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACUdE2YYR6PVxuHTxiIUBiJURmNVRx5Shl3SRmJUxqNVRqNVhqOVhqOVxqPVxqP
        VxqPVxqOVxqOVhqNVhqNVRqOVxuTWxuaYh6yj2UAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACXbjqMVBqHTxiIUBiJURmKUxmTWyB+
        Thp4SxqMVhqPWBuQWBuQWRuRWRuRWhuRWhuRWhuRWRuQWRuQWBuPWBuOVxqNVhqOVxuaZSSfbCsAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACWc0WPWBuIUBmKUhmLUxmMVBqWYCOEUhp7TRuRWRuRWhuSWxyTWxyTXByTXByTXByTXByTXByTWxyS
        WxyRWhuRWRuQWBuOVxqdZid4TyGYZykAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACVdk6RWhyKUhmLUxmMVRqOVhqaZCaIVRt+TxuTWxyUXByV
        XRyVXh2WXx2WXx2WXx2WXx2WXx2VXh2VXRyUXByTWxySWhuQWRucZSZ8Tx6HVh2tgEYAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACSe1uVXhyLUxmM
        VRqOVhqQWBufaiqLVxyCUhyVXh2WXx2XYB2YYR2YYR6ZYh6ZYh6ZYh6YYR6YYR2XYB2WXx2VXh2UXByT
        WxycZSSDUx6JVBuWYR4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACRgGqXYB2MVRqOVhqQWBuRWhuibS2MWByGVh2XYB2ZYR6aYx6bZB6bZB+cZR+c
        ZR+cZR+bZB+bZB6aYx6ZYR6XYB2WXx2VXRyaYyKHVh2QWBuTXBy/nXEAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACPhXmcZR+OVhqQWBuRWhuTXByncjGK
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD///////8AAP///////wAA//B/////AAD/AAD///8AAPgAAB///wAA8AAAB///
        AADwAAAD//8AAPAAAAH//wAA8AAAAP//AADwAAAA//8AAPAAAAB//wAA8AAAAH//AAD4AAAAf/8AAPgA
        AAB//wAA+AAAAH//AAD4AAAAf/8AAPgAAAAP/wAA/AAAAAB/AAD8AAAAAB8AAPwAAAAADwAA/gAAAAAH
        AAD+AAAAAAcAAP8AAAAABwAA/4AAAAAHAAD/4AAAAAcAAP/wACAABwAA//gAMAAHAAD//AAYAA8AAP/+
        ABgADwAA//4AHAAfAAD//wAeAB8AAP//AA8AfwAA//4AD4B/AAD//AAPwD8AAP/8AA/APwAA//gAB8A/
        AAD/+AAHgD8AAP/wAAeAHwAA//AABwAfAAD/+AABAB8AAP/4AAEADwAA//gAA4AfAAD//AAHwD8AAP/8
        AA/gfwAA//4AH///AAD//wB///8AAP///////wAA////////AAA=
</value>
  </data>
</root>